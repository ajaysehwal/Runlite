version: "3.8"
services:
  # Main backend (code compilation server)
  compiler:
    build: ./compiler
    container_name: compiler
    ports:
      - "8000:8000"
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock  # Windows path format
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - redis
      - postgres
    environment:
      PORT: 8000
      NODE_ENV: development
      CONSOLE_LOGS: "true"
      ENCRYPTION_KEY: e8907ce6f646a336bd54a706c32d32a812558e138e9ed44cdc26868db7373c3d
      REDIS_HOST: redis
      DATABASE_URL: postgresql://compyl:compylpass@postgres:5432/defaultdb
      REDIS_PORT: 6379
      REDIS_USERNAME: default
      REDIS_PASSWORD: RadheRadhe
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: compyl
      POSTGRES_PASSWORD: compylpass
      POSTGRES_DB: defaultdb
      KAFKA_BROKER: kafka:9092
      DOCKER_HOST: tcp://host.docker.internal:2375
    networks:
      - compyl-net

  # Keys Management Service
  keys-server:
    build: ./keys # Assuming you have a keys management microservice in this directory
    container_name: keys-server
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - postgres
    environment:
      PORT: 8080
      NODE_ENV: development
      DATABASE_URL: postgresql://compyl:compylpass@postgres:5432/defaultdb
      CONSOLE_LOGS: "true"
      ENCRYPTION_KEY: e8907ce6f646a336bd54a706c32d32a812558e138e9ed44cdc26868db7373c3d
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_USERNAME: default
      REDIS_PASSWORD: RadheRadhe
    networks:
      - compyl-net

  # Redis service
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "RadheRadhe"]
    networks:
      - compyl-net

  # Postgres service
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: compyl
      POSTGRES_PASSWORD: compylpass
      POSTGRES_DB: defaultdb
    ports:
      - "5432:5432"
    networks:
      - compyl-net

  nginx:
    image: nginx:latest
    container_name: nginx-reverse-proxy
    ports:
      - "80:80"  # Expose HTTP on port 80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # Mount your nginx.conf file
    depends_on:
      - compiler
      - keys-server
    networks:
      - compyl-net

networks:
  compyl-net:
    driver: bridge
